<UserControl x:Class="SecurityTestsUI.AdminView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SecurityTestsUI"
             mc:Ignorable="d" 
              xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
              d:DesignHeight="740" d:DesignWidth="1100">
    <UserControl.Resources>
        <Style x:Key="MyDataGrid" TargetType="DataGrid">
            <!-- Make the border and grid lines a little less imposing -->
            <Setter Property="BorderBrush" Value="#DDDDDD" />
            <Setter Property="HorizontalGridLinesBrush" Value="#DDDDDD" />
            <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />

            <Setter Property="RowStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <!-- Highlight a grid row as the mouse passes over -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightCyan" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                        <Style.Triggers>
                            <!-- Highlight selected rows -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#ff66ccff" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="#ff66ccff" />
                                <Setter Property="BorderBrush" Value="Black" />
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </Style.Triggers>
                        <!-- Add some padding around the contents of a cell -->
                        <Setter Property="Padding" Value="4,3,4,3" />
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <Border Padding="{TemplateBinding Padding}" 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style TargetType="Control">
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Background="#2E333A">
        <StackPanel Margin="10 10">
            <TabControl Background="#2E333A" MinHeight="698">
                <TabItem x:Name="AddQuestionTab" Header="Add Question" Style="{StaticResource MaterialDesignNavigationRailTabItem}"  Width="Auto" >
                    <StackPanel  MinWidth="590" MinHeight="608" VerticalAlignment="Top" Margin="300 0 0 0">
                        <StackPanel Background="#2E333A" MinHeight="498" MinWidth="590" >
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <materialDesign:PackIcon Kind="QuestionMark" MinWidth="40" MinHeight="40" Foreground="White" VerticalAlignment="Center"/>
                                <TextBox x:Name="Question" Margin="10 0" materialDesign:HintAssist.Hint="Enter Question" Foreground="White" MinWidth="400" MinHeight="90" TextWrapping="Wrap" BorderBrush="OrangeRed" Style="{StaticResource MaterialDesignFilledTextBox}" TextChanged="Question_TextChanged"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <materialDesign:PackIcon Kind="UserQuestionOutline" MinWidth="40" MinHeight="40" Foreground="White" VerticalAlignment="Center"/>
                                <TextBox x:Name="Answer1" Margin="10 0" materialDesign:HintAssist.Hint="Enter First Answer" Foreground="White" MinWidth="400" MinHeight="30" TextWrapping="Wrap" BorderBrush="OrangeRed" Style="{StaticResource MaterialDesignFilledTextBox}" TextChanged="Question_TextChanged"/>
                                <CheckBox x:Name="IsAnswer1Correct" Content="Is Correct" Foreground="OrangeRed" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <materialDesign:PackIcon Kind="UserQuestionOutline" MinWidth="40" MinHeight="40" Foreground="White" VerticalAlignment="Center"/>
                                <TextBox x:Name="Answer2" Margin="10 0" materialDesign:HintAssist.Hint="Enter Second Answer" Foreground="White" MinWidth="400" MinHeight="30" TextWrapping="Wrap" BorderBrush="OrangeRed" Style="{StaticResource MaterialDesignFilledTextBox}" TextChanged="Question_TextChanged"/>
                                <CheckBox x:Name="IsAnswer2Correct" Content="Is Correct" Foreground="OrangeRed" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <materialDesign:PackIcon Kind="UserQuestionOutline" MinWidth="40" MinHeight="40" Foreground="White" VerticalAlignment="Center"/>
                                <TextBox x:Name="Answer3" Margin="10 0" materialDesign:HintAssist.Hint="Enter Third Answer" Foreground="White" MinWidth="400" MinHeight="30" TextWrapping="Wrap" BorderBrush="OrangeRed" Style="{StaticResource MaterialDesignFilledTextBox}" TextChanged="Question_TextChanged"/>
                                <CheckBox x:Name="IsAnswer3Correct" Content="Is Correct" Foreground="OrangeRed" />                            
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <materialDesign:PackIcon Kind="UserQuestionOutline" MinWidth="40" MinHeight="40" Foreground="White" VerticalAlignment="Center"/>
                                <TextBox x:Name="Answer4" Margin="10 0" materialDesign:HintAssist.Hint="Enter Fourth Answer" Foreground="White" MinWidth="400" MinHeight="30" TextWrapping="Wrap" BorderBrush="OrangeRed" Style="{StaticResource MaterialDesignFilledTextBox}" TextChanged="Question_TextChanged"/>
                                <CheckBox x:Name="IsAnswer4Correct" Content="Is Correct" Foreground="OrangeRed" />
                            </StackPanel>


                            <StackPanel Orientation="Horizontal" Margin="10">
                                <materialDesign:PackIcon Kind="Security" MinWidth="40" MinHeight="40" Foreground="White"  VerticalAlignment="Center"/>
                                <ComboBox x:Name="TypeOfQuestion" Margin="10 0 0 0" materialDesign:HintAssist.Hint="Choose Type Of Question" Background="#2E333A" Foreground="White"  MinWidth="400" BorderBrush="OrangeRed"  Cursor="Hand" Style="{StaticResource MaterialDesignFilledComboBox}" SelectionChanged="ComboBoxes_SelectionChanged">

                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Type}" Foreground="OrangeRed"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="10">
                                <materialDesign:PackIcon Kind="MonitorEye" MinWidth="40" MinHeight="40" Foreground="White"  VerticalAlignment="Center"/>
                                <ComboBox x:Name="Roles" Margin="10 0 0 0" materialDesign:HintAssist.Hint="Choose Which Role This Question Will Be Displayed For" Background="#2E333A" Foreground="White"  Width="400" BorderBrush="OrangeRed"  Cursor="Hand" Style="{StaticResource MaterialDesignFilledComboBox}" SelectionChanged="ComboBoxes_SelectionChanged">

                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding RoleName}" Foreground="OrangeRed"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>

                            <Separator Style="{StaticResource MaterialDesignLightSeparator}" x:Name="ErrorSeparator" Visibility="Collapsed"/>
                            <TextBlock x:Name="ErrorMessage" TextWrapping="Wrap" Foreground="Red" HorizontalAlignment="Center" Visibility="Collapsed"/>
                        </StackPanel>
                        <Button HorizontalAlignment="Left" MinWidth="550" x:Name="AddQuestionButton" Margin="0 30 0 0" Click="Add_Click">
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="PlusBoxOutline" VerticalAlignment="Center" Width="23" Height="23"/>
                                    <TextBlock x:Name="AddQuestionButtonText" Text="Add" Margin="10 0 0 0" FontSize="16"></TextBlock>

                                </StackPanel>
                            </Button.Content>
                        </Button>

                    </StackPanel>
                </TabItem>
                <TabItem x:Name="ReportsTab" Header="Reports" Style="{DynamicResource MaterialDesignNavigationRailTabItem}" Width="Auto">
                    <StackPanel x:Name="Reports" Margin="0 20 0 0" Visibility="Visible">


                        <Button x:Name="ReportByEmployees" Height="100" Width="650" FontSize="24" Background="#2E333A" Content="Show Employee report" Click="ReportByEmployees_Click" Margin="200,0" >
                            <Button.Foreground>
                                <LinearGradientBrush StartPoint="0.1,0" EndPoint="0.9,1">
                                    <GradientStop Color="#FFE63070" Offset="1" />
                                    <GradientStop Color="#FFFE8704" Offset="0" />
                                </LinearGradientBrush>
                            </Button.Foreground>
                        </Button>


                        <Button x:Name="ReportByManagers" Margin="0 100 0 0" Height="100" Width="650" FontSize="24" Background="#2E333A" Content="Show Manager report" Click="ReportByManagers_Click">
                            <Button.Foreground>
                                <LinearGradientBrush StartPoint="0.1,0" EndPoint="0.9,1">
                                    <GradientStop Color="#FFE63070" Offset="1" />
                                    <GradientStop Color="#FFFE8704" Offset="0" />
                                </LinearGradientBrush>
                            </Button.Foreground>
                        </Button>

                        <Button x:Name="ReportByWorkers" Margin="0 100 0 0" Height="100" Width="650" FontSize="24" Background="#2E333A" Content="Show Workers report" Click="ReportByWorkers_Click">
                            <Button.Foreground>
                                <LinearGradientBrush StartPoint="0.1,0" EndPoint="0.9,1">
                                    <GradientStop Color="#FFE63070" Offset="1" />
                                    <GradientStop Color="#FFFE8704" Offset="0" />
                                </LinearGradientBrush>
                            </Button.Foreground>
                        </Button>
                    </StackPanel>
                </TabItem>
                <TabItem x:Name="UsersTab"  Header="Users" Style="{DynamicResource MaterialDesignNavigationRailTabItem}" Width="auto">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <DataGrid x:Name="UsersDataGrid" Grid.ColumnSpan="4" Grid.Column="0" Grid.Row="0" AutoGenerateColumns="False" CanUserAddRows="False" VerticalAlignment="Top" Style="{StaticResource MyDataGrid}" MaxHeight="490"  SelectionChanged="DataGrid_SelectionChanged" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Id" Binding="{Binding Path=Id}"/>
                                <DataGridTextColumn Header="UserName" Binding="{Binding Path=UserName}"/>
                                <DataGridTextColumn Header="UserPassword" Binding="{Binding Path=UserPassword}"/>
                                <DataGridTextColumn Header="RoleId" Binding="{Binding Path=RoleId}"/>
                                <DataGridCheckBoxColumn Header="Verefication Status By Fire Safety" Binding="{Binding Path=VereficationStatusByFireSafety}"/>
                                <DataGridCheckBoxColumn Header="Verefication Status By Industrial Safety" Binding="{Binding Path=VereficationStatusByIndustrialSafety}"/>
                                <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}"/>
                                <DataGridTextColumn Header="EmailAddress" Binding="{Binding Path=EmailAddress}"/>
                                <DataGridTemplateColumn Header="Birthday">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Birthday,StringFormat=d}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <DatePicker SelectedDate="{Binding Path=Birthday}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Counter Of Used Tries" Binding="{Binding Path=CounterOfUsedTries}"/>
                                <DataGridTemplateColumn Header="Last Try By Fire Safety">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=DateTimeOfLastTryByFireSafety, StringFormat= 'MM /dd/yyyy HH:mm:ss'}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <DatePicker SelectedDate="{Binding Path=DateTimeOfLastTryByFireSafety, StringFormat= 'MM /dd/yyyy HH:mm:ss'}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Last Try By Industrial Safety">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=DateTimeOfLastTryByIndustrialSafety, StringFormat= 'MM /dd/yyyy HH:mm:ss'}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <DatePicker SelectedDate="{Binding Path=DateTimeOfLastTryByIndustrialSafety, StringFormat= 'MM /dd/yyyy HH:mm:ss'}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="1" >
                            <TextBox x:Name="UserName" materialDesign:HintAssist.Hint="Enter Username" Foreground="White"  BorderBrush="OrangeRed" Style="{StaticResource MaterialDesignFilledTextBox}" Margin="0 10" MinWidth="250"/>
                            <TextBox x:Name="UserPassword" materialDesign:HintAssist.Hint="Enter UserPassword" Foreground="White" BorderBrush="OrangeRed" Style="{StaticResource MaterialDesignFilledTextBox}" Margin="0 10"/>
                            <TextBox x:Name="Email" Margin="0 10 0 30" materialDesign:HintAssist.Hint="Enter Email" Foreground="White" BorderBrush="OrangeRed" Style="{StaticResource MaterialDesignFilledTextBox}" />
                        </StackPanel>
                        <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Center"  Grid.Column="1" Grid.Row="1">
                            <DatePicker x:Name="Birthday" BorderBrush="OrangeRed" Margin="0 10 " Foreground="White" MinWidth="250" MinHeight="45" materialDesign:HintAssist.Hint="Enter Date Birthday" >
                                <DatePicker.Resources>
                                    <Style TargetType="{x:Type DatePickerTextBox}">
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <TextBox x:Name="PART_TextBox" 
                                        Text="{Binding Path=SelectedDate, RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="BorderBrush" Value="White"/>
                                    </Style>
                                </DatePicker.Resources>
                            </DatePicker>
                            <ComboBox x:Name="RoleUser" Margin="0 10" materialDesign:HintAssist.Hint="Choose Role" Background="#2E333A" Foreground="White"  MinWidth="250" BorderBrush="OrangeRed"  Cursor="Hand" Style="{StaticResource MaterialDesignFilledComboBox}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding RoleName}" Foreground="OrangeRed"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <TextBox x:Name="NameUser" Margin="0 10 0 30" materialDesign:HintAssist.Hint="Enter Name" Foreground="White" MinWidth="250" BorderBrush="OrangeRed" Style="{StaticResource MaterialDesignFilledTextBox}" />
                        </StackPanel>
                        
                        <StackPanel  HorizontalAlignment="Left" Grid.Column="2" Grid.Row="1" VerticalAlignment="Top">
                            <TextBox x:Name="CounterOfUsedTries" Margin="0 10 0 10" materialDesign:HintAssist.Hint="Enter Counter" Foreground="White" BorderBrush="OrangeRed" Style="{StaticResource MaterialDesignFilledTextBox}" />
                            <CheckBox x:Name="FireSafety" Foreground="White" MinHeight="45" BorderBrush="OrangeRed" VerticalContentAlignment="Center"  Margin="0 10" MinWidth="250" Checked="FireSafety_Checked" Content="Verefication by fire safety"/>
                            <CheckBox x:Name="IndustrialSafety"  Foreground="White" MinHeight="45" BorderBrush="OrangeRed"  Margin="0 10"  Content="Verefication by industrial safety"/>
                        </StackPanel>
                        <StackPanel  HorizontalAlignment="Left" Grid.Column="3" Grid.Row="1" VerticalAlignment="Top">
                            <Button x:Name="UpdateUser" Margin="0 10" Background="RoyalBlue" BorderBrush="RoyalBlue" MinHeight="30" MinWidth="250" Click="UpdateUser_Click" >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="PencilOutline" VerticalAlignment="Center" Width="23" Height="23"/>
                                        <TextBlock x:Name="UpdateUserButton" Text="Update"  FontSize="16"></TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button x:Name="AddUser" Margin="0 10" Background="LimeGreen" BorderBrush="LimeGreen" MinHeight="30" MinWidth="250" Click="AddUser_Click"  >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="PlusOutline" VerticalAlignment="Center" Width="23" Height="23"/>
                                        <TextBlock x:Name="AddUserButton" Text="Add"  FontSize="16"></TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Button x:Name="DeleteUser" Margin="0 10" Background="Red" BorderBrush="Red" MinHeight="30" MinWidth="250" Click="DeleteUser_Click" >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="DeleteOutline" VerticalAlignment="Center" Width="23" Height="23"/>
                                        <TextBlock x:Name="DeleteUserButton" Text="Delete"  FontSize="16"></TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                            <Separator Style="{StaticResource MaterialDesignLightSeparator}" x:Name="UserErrorSeparator" Visibility="Collapsed"/>
                            <TextBlock x:Name="UserErrorMessage" TextWrapping="Wrap" Foreground="Red" HorizontalAlignment="Center" Visibility="Collapsed"/>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem x:Name="AnswersTab"  Header="Answers" Style="{DynamicResource MaterialDesignNavigationRailTabItem}" Width="auto">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <DataGrid x:Name="AnswersDataGrid" Grid.ColumnSpan="4" Grid.Column="0" Grid.Row="0" AutoGenerateColumns="True" CanUserAddRows="False" MaxHeight="490" VerticalAlignment="Top" Style="{StaticResource MyDataGrid}"  SelectionChanged="DataGrid_SelectionChanged" >
                            
                        </DataGrid>
                        <StackPanel  HorizontalAlignment="Left" Grid.Column="2" Grid.Row="1" VerticalAlignment="Center">
                            <Button x:Name="DeleteAnswer" Margin="0 10 0 30" Background="Red" BorderBrush="Red" MinHeight="30" MinWidth="250" Click="DeleteAnswer_Click" >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="DeleteOutline" VerticalAlignment="Center" Width="23" Height="23"/>
                                        <TextBlock x:Name="DeleteAnswerButton" Text="Delete"  FontSize="16"></TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                        </StackPanel>
                        <StackPanel Grid.Column="1" Grid.Row="1">
                            <Separator Style="{StaticResource MaterialDesignLightSeparator}" x:Name="AnswersErrorSeparator" Visibility="Collapsed"/>
                            <TextBlock x:Name="AnswersErrorMessage" TextWrapping="Wrap" Foreground="Red" HorizontalAlignment="Center" Visibility="Collapsed"/>
                        </StackPanel>
                        <StackPanel  HorizontalAlignment="Left" Grid.Column="3" Grid.Row="1" VerticalAlignment="Center">
                            <Button x:Name="UpdateAnswer" Margin="0 10 0 30" Background="RoyalBlue" BorderBrush="RoyalBlue" MinHeight="30" MinWidth="250" Click="UpdateAnswer_Click" >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="PencilOutline" VerticalAlignment="Center" Width="23" Height="23"/>
                                        <TextBlock x:Name="UpdateAnswerButton" Text="Update"  FontSize="16"></TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem  x:Name="QuestionsTab" Header="Questions" Style="{DynamicResource MaterialDesignNavigationRailTabItem}" Width="auto">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <DataGrid x:Name="QuestionsDataGrid" Grid.ColumnSpan="4" Grid.Column="0" Grid.Row="0" AutoGenerateColumns="True" CanUserAddRows="False" MaxHeight="490" VerticalAlignment="Top" Style="{StaticResource MyDataGrid}"  SelectionChanged="DataGrid_SelectionChanged" >

                        </DataGrid>
                        <StackPanel  HorizontalAlignment="Left" Grid.Column="2" Grid.Row="1" VerticalAlignment="Center">
                        <Button x:Name="DeleteQuestion" Margin="0 10 0 30" Background="Red" BorderBrush="Red" MinHeight="30" MinWidth="250" Click="DeleteQuestion_Click" >
                            <Button.Content>
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon Kind="DeleteOutline" VerticalAlignment="Center" Width="23" Height="23"/>
                                    <TextBlock x:Name="DeleteQuestionButton" Text="Delete"  FontSize="16"></TextBlock>
                                </StackPanel>
                            </Button.Content>
                        </Button>
                            </StackPanel>
                        <StackPanel  Grid.Column="1" Grid.Row="1">
                            <Separator Style="{StaticResource MaterialDesignLightSeparator}" x:Name="QuestionsErrorSeparator" Visibility="Collapsed"/>
                            <TextBlock x:Name="QuestionsErrorMessage" TextWrapping="Wrap" Foreground="Red" HorizontalAlignment="Center" Visibility="Collapsed"/>
                        </StackPanel>
                        <StackPanel  HorizontalAlignment="Left" Grid.Column="3" Grid.Row="1" VerticalAlignment="Top">
                            <Button x:Name="UpdateQuestion" Margin="0 10 0 30" Background="RoyalBlue" BorderBrush="RoyalBlue" MinHeight="30" MinWidth="250" Click="UpdateQuestion_Click" >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="PencilOutline" VerticalAlignment="Center" Width="23" Height="23"/>
                                        <TextBlock x:Name="UpdateQuestionButton" Text="Update"  FontSize="16"></TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>

                            
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem x:Name="RolesTab" Header="Roles" Style="{DynamicResource MaterialDesignNavigationRailTabItem}" Width="auto">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <DataGrid x:Name="RolesDataGrid" Grid.ColumnSpan="4" Grid.Column="0" Grid.Row="0" AutoGenerateColumns="True" CanUserAddRows="False" MaxHeight="490" VerticalAlignment="Top" Style="{StaticResource MyDataGrid}"  SelectionChanged="DataGrid_SelectionChanged" >

                        </DataGrid>
                        <StackPanel  HorizontalAlignment="Left" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center">
                            <Button x:Name="AddRole" Margin="0 10 0 50" Background="LimeGreen" BorderBrush="LimeGreen" MinHeight="30" MinWidth="250" Click="AddRole_Click"  >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="PlusOutline" VerticalAlignment="Center" Width="23" Height="23"/>
                                        <TextBlock x:Name="AddRoleButton" Text="Add"  FontSize="16"></TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                        </StackPanel>
                        <StackPanel  HorizontalAlignment="Left" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center">
                            <TextBox x:Name="RoleName" VerticalAlignment="Top" materialDesign:HintAssist.Hint="Enter RoleName" Grid.Column="0" Grid.Row="1" Foreground="White"  BorderBrush="OrangeRed" Style="{StaticResource MaterialDesignFilledTextBox}" Margin="10 10 10 60" MinWidth="230"/>
                        </StackPanel>
                        <StackPanel  HorizontalAlignment="Left" Grid.Column="2" Grid.Row="1" VerticalAlignment="Center">
                            <Button x:Name="DeleteRole" Margin="0 10 0 50" Background="Red" Grid.Column="2" Grid.Row="1" BorderBrush="Red" MinHeight="30" MinWidth="250" Click="DeleteRole_Click" >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="DeleteOutline" VerticalAlignment="Center" Width="23" Height="23"/>
                                        <TextBlock x:Name="DeleteRoleButton" Text="Delete"  FontSize="16"></TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                        </StackPanel>
                        <StackPanel  HorizontalAlignment="Left" Grid.Column="3" Grid.Row="1" VerticalAlignment="Center">
                            <Button x:Name="UpdateRole" Margin="0 10 0 50" Background="RoyalBlue" BorderBrush="RoyalBlue" MinHeight="30" MinWidth="250" Click="UpdateRole_Click" >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="PencilOutline" VerticalAlignment="Center" Width="23" Height="23"/>
                                        <TextBlock x:Name="UpdateRoleButton" Text="Update"  FontSize="16"></TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>

                            <Separator Style="{StaticResource MaterialDesignLightSeparator}" x:Name="RolesErrorSeparator" Visibility="Collapsed"/>
                            <TextBlock x:Name="RolesErrorMessage" TextWrapping="Wrap" Foreground="Red" HorizontalAlignment="Center" Visibility="Collapsed"/>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem x:Name="TypesOfQuestionsTab" Header="Types Of Question" Style="{DynamicResource MaterialDesignNavigationRailTabItem}" Width="auto">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <DataGrid x:Name="TypesDataGrid" Grid.ColumnSpan="4" Grid.Column="0" Grid.Row="0" AutoGenerateColumns="True" CanUserAddRows="False" MaxHeight="490" VerticalAlignment="Top" Style="{StaticResource MyDataGrid}"  SelectionChanged="DataGrid_SelectionChanged" >

                        </DataGrid>
                        <StackPanel  HorizontalAlignment="Left" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center">
                            <Button x:Name="AddType" Margin="0 10 0 50" Background="LimeGreen" BorderBrush="LimeGreen" MinHeight="30" MinWidth="250" Click="AddType_Click"  >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="PlusOutline" VerticalAlignment="Center" Width="23" Height="23"/>
                                        <TextBlock x:Name="AddTypeButton" Text="Add"  FontSize="16"></TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                        </StackPanel>
                        <StackPanel  HorizontalAlignment="Left" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center">
                            <TextBox x:Name="TypeName" VerticalAlignment="Top" materialDesign:HintAssist.Hint="Enter Type" Grid.Column="0" Grid.Row="1" Foreground="White"  BorderBrush="OrangeRed" Style="{StaticResource MaterialDesignFilledTextBox}" Margin="10 10 10 50" MinWidth="230"/>
                        </StackPanel>
                        <StackPanel  HorizontalAlignment="Left" Grid.Column="2" Grid.Row="1" VerticalAlignment="Center">
                            <Button x:Name="DeleteType" Margin="0 10 0 50" Background="Red" Grid.Column="2" Grid.Row="1" BorderBrush="Red" MinHeight="30" MinWidth="250" Click="DeleteType_Click" >
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="DeleteOutline" VerticalAlignment="Center" Width="23" Height="23"/>
                                        <TextBlock x:Name="DeleteTypeButton" Text="Delete"  FontSize="16"></TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>
                        </StackPanel>
                        <StackPanel  HorizontalAlignment="Left" Grid.Column="3" Grid.Row="1" VerticalAlignment="Center">
                            <Button x:Name="UpdateType" Margin="0 10 0 50" Background="RoyalBlue" BorderBrush="RoyalBlue" MinHeight="30" MinWidth="250" Click="UpdateType_Click">
                                <Button.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <materialDesign:PackIcon Kind="PencilOutline" VerticalAlignment="Center" Width="23" Height="23"/>
                                        <TextBlock x:Name="UpdateTypeButton" Text="Update"  FontSize="16"></TextBlock>
                                    </StackPanel>
                                </Button.Content>
                            </Button>

                            <Separator Style="{StaticResource MaterialDesignLightSeparator}" x:Name="TypesErrorSeparator" Visibility="Collapsed"/>
                            <TextBlock x:Name="TypesErrorMessage" TextWrapping="Wrap" Foreground="Red" HorizontalAlignment="Center" Visibility="Collapsed"/>
                        </StackPanel>
                    </Grid>
                </TabItem>
            </TabControl>
        </StackPanel>

    </Grid>
</UserControl>
